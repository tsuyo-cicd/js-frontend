pipelines:
  - name: cicd_js_frontend
    steps: 
      - name: cicd_npm_build
        type: NpmBuild
        configuration:
          npmArgs: --no-progress --no-audit
          sourceLocation: .
          repositoryName: cicd-npm
          inputResources:
            - name: cicd_js_frontend_gitrepo
          integrations:
            - name: myArtifactory
        execution:
          onStart:
            - ls -l
          onComplete:
            - ls -l

 
      # - name: pack_frontend
      #   type: Bash
      #   configuration:
      #     inputSteps:
      #       - name: bld_frontend
      #     integrations:
      #       - name: myArtifactory
      #   execution:
      #     onStart:
      #       - export tempStateLocation="$step_tmp_dir/npmSourceState"
      #       - restore_run_files npmBuildInputGitRepo $tempStateLocation
      #       - pushd $tempStateLocation
      #       - npm run build
      #       - add_run_files $tempStateLocation/. npmBuildInputGitRepo
 
      # - name: publish_frontend
      #   type: NpmPublish
      #   configuration:
      #     repositoryName: npm-local
      #     inputSteps:
      #       - name: pack_frontend
      #     integrations:
      #       - name: myArtifactory
      #   execution:
      #     onStart:
      #       - export inputNpmBuildStepName="bld_frontend"
 
      # - name: build_app
      #   type: Bash
      #   configuration:
      #     environmentVariables:
      #       dockerImageName: artifactory1.tsuyo.org:8082/docker-local/app
      #       dockerImageTag: ${run_number}
      #     inputResources:
      #       - name: be_gitRepo
      #         trigger: false
      #     inputSteps:
      #       - name: bld_backend
      #       - name: publish_frontend
      #     integrations:
      #       - name: myArtifactory
      #   execution:
      #     onStart:
      #       - rm -rf $run_dir/workspace/jfrog
      #       - retry_command jfrog rt config --url $int_myArtifactory_url --user $int_myArtifactory_user --apikey $int_myArtifactory_apikey --interactive=false
      #       - pushd $res_be_gitRepo_resourcePath
      #       - add_run_variables buildStepName=${step_name}
      #       - add_run_variables ${step_name}_buildNumber=${run_number}
      #       - add_run_variables ${step_name}_buildName=${pipeline_name}
      #       - docker build --pull --no-cache -t $dockerImageName:$dockerImageTag --build-arg REGISTRY=${int_myArtifactory_url} .
      #       - jfrog rt bce $pipeline_name $run_number
      #       - jfrog rt docker-push artifactory1.tsuyo.org:8082/docker-local/app:$run_number docker-local --build-name=$pipeline_name --build-number=$run_number
      #       - add_run_files /tmp/jfrog/. jfrog
 
      # - name: publish_app_build
      #   type: PublishBuildInfo
      #   configuration:
      #     forceXrayScan: false
      #     inputSteps:
      #       - name: build_app
      #     outputResources:
      #       - name: appl_build_info
 
      # - name: promote_app_build
      #   type: PromoteBuild
      #   configuration:
      #     targetRepository: demo-pipelines
      #     integrations:
      #       - name: myArtifactory
      #     inputResources:
      #       - name: appl_build_info
      #     outputResources:
      #       - name: appl_promoted_build_info
